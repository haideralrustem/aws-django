c:/Users/xario/PycharmProjects/django_app/venv/Scripts/Activate.ps1 ;
cd haider_site;
python manage.py runserver;

# github landing page is located at https://github.com/haideralrustem/haideralrustem.github.io.git or
# in documents: haideralrustem.github.io

venv/Scripts/Activate.ps1;cd haider_site;python manage.py runserver;

cd django_app;venv/Scripts/Activate.ps1; cd haider_site;python manage.py runserver;


# Useful commands On Linux:


The site is using UWSGI, so you need that installed and configured so tha nginx can use it to host the site:



1- apt install uwsgi-core
2- apt install uwsgi-plugin-python3


3- Create .ini file at aws-django directory:
[uwsgi]

plugin = python3
# full path to Django project's root directory

chdir = /home/ubuntu/aws-django/
# Django's wsgi file
module = haider_site.wsgi
# full path to python virtual env
home = /home/ubuntu/env
# enable uwsgi master process
master = true
# maximum number of worker processes
processes = 10
# the socket (use the full path to be safe
socket = /home/ubuntu/aws-django/app.sock
# socket permissions
chmod-socket = 666
# clear environment on exit
vacuum = true


4- create uwsgi.service at /etc/systemd/system:

[Unit]
Description=uWSGI instance for aws-django
After=network.target

[Service]
ExecStart=/usr/bin/uwsgi --ini /home/ubuntu/aws-django/haider_site_uwsgi.ini 
Restart=always
KillSignal=SIGQUIT
Type=notify
NotifyAccess=all
User=root
Group=root

[Install]
WantedBy=multi-user.target



5- sudo systemctl enable uwsgi
6- sudo systemctl restart uwsgi

7- Test your site with python manage.py runserver to address any errors before uwsgi can work properly




# to activate virtual environment
source activate

# sqlite3 problem
wget https://kojipkgs.fedoraproject.org//packages/sqlite/3.8.11/1.fc21/x86_64/sqlite-3.8.11-1.fc21.x86_64.rpm
sudo yum install sqlite-3.8.11-1.fc21.x86_64.rpm



sudo yum install python3-mod_wsgi



______ ORM QUERYSETS ______

python manage.py shell

Profile.objects.get(user__username='keems')

MyCsvData.objects.filter(field1='john', field2='Sample title').exists()

SomeModel.objects.filter(id=id).delete()



Heroku

I had the same issue. Just make sure that you initialized the git repo inside the django project root. That way, your .git folder, .gitignore file, manage.py, requirements.txt, etc.. are on the same hierarchical level.




f